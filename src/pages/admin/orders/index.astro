---
import AdminLayout from "../../../layouts/AdminLayout.astro";
import { formatDate } from "../../../utils/dateUtils";
import { supabaseAdmin } from '../../../lib/supabaseAdmin';
import { OrderSchema } from '../../../schemas/order.schema';
import type { Order } from '../../../schemas/order.schema';
import { handleSupabaseError } from '../../../utils/supabaseUtils';

// Use a local type for the admin table view
interface AdminOrderTableRow {
  id: number;
  user_id: string;
  orderer_name: string;
  status: Order['status'];
  created_at: string;
  package_tier?: string | null;
}

let orders: AdminOrderTableRow[] = [];
let errorMessage: string | null = null;

try {
  // Direct DB call using supabaseAdmin
  const { data, error } = await supabaseAdmin
    .from("orders")
    .select(`id, created_at, orderer_name, status, package_tier, user_id`)
    .order("created_at", { ascending: false });
  handleSupabaseError(error, "fetch all orders (admin page)");
  const ResponseOrderSchema = OrderSchema.pick({
    id: true,
    created_at: true,
    orderer_name: true,
    status: true,
    package_tier: true,
    user_id: true,
  });
  const parseResult = ResponseOrderSchema.array().safeParse(data);
  if (!parseResult.success) {
    console.error('Admin Orders page response validation failed:', parseResult.error.flatten());
    throw new Error('Internal error: Invalid data format for orders.');
  }
  orders = parseResult.data;
} catch (e: any) {
  console.error("Error fetching admin orders:", e);
  errorMessage = "Could not load orders. Please check server logs or try again later.";
}
---

<AdminLayout title="Manage Orders">
  {errorMessage && <p style="color: red;">Error: {errorMessage}</p>}

  {orders.length === 0 && !errorMessage ? (
    <p>No orders found.</p>
  ) : (
    <table>
      <thead>
        <tr>
          <th>ID</th>
          <th>Created</th>
          <th>Orderer Name</th>
          <th>Status</th>
          <th>Package</th>
          <th>User ID</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        {orders.map((order) => (
          <tr>
            <td>{order.id}</td>
            <td>{formatDate(order.created_at)}</td>
            <td>{order.orderer_name}</td>
            <td>{order.status || 'N/A'}</td>
            <td>{order.package_tier || 'N/A'}</td>
            <td>{order.user_id}</td>
            <td>
              <a href={`/admin/orders/${order.id}`}>Details</a>
            </td>
          </tr>
        ))}
      </tbody>
    </table>
  )}
</AdminLayout>