---

import Layout from "../layout/Layout.astro";

const title = "Place Your Order";
const turnstileSiteKey =
  import.meta.env.PUBLIC_TURNSTILE_SITE_KEY || "1x00000000000000000000AA";
---

<Layout title={title}>
  <head>
    <script src="https://challenges.cloudflare.com/turnstile/v0/api.js" defer
    ></script>
    <style>
      .hidden {
        display: none;
      }
    </style>
  </head>
  <main>
    <section>
      <h1>{title}</h1>
      <p>Enter your details and upload your documents to start your order.</p>

      <form
        id="order-form"
        action="/api/orders/create"
        method="post"
        enctype="multipart/form-data"
      >
        <div>
          <label for="order-files">Upload Documents:</label>
          <input
            type="file"
            id="order-files"
            name="order_files"
            multiple
            required
            accept=".pdf,.doc,.docx,.txt,.jpg,.jpeg,.png"
          />
          <small
            >You can select multiple files. Allowed types: PDF, DOC, DOCX, TXT,
            JPG, PNG.</small
          >
        </div>

        <div>
          <label for="orderer-name">Your Name:</label>
          <input
            type="text"
            id="orderer-name"
            name="orderer_name"
            required
            placeholder="Enter your full name"
          />
        </div>

        <div>
          <label for="phone">Phone Number:</label>
          <input
            required
            type="tel"
            id="phone"
            name="phone"
            placeholder="+62XXXXXXX or 08XXXXXXXX"
          />
        </div>

        <div>
          <label for="package-slider">Choose Package:</label>
          <input
            type="range"
            id="package-slider"
            name="package_tier_value"
            min="1"
            max="3"
            step="1"
            value="1"
            required
          />
          <div id="package-display-container">
            Selected Package: <span id="selected-package-display">Basic</span>
          </div>
        </div>

        <div class="checkbox-group">
          <input
            type="checkbox"
            id="is-disadvantaged"
            name="is_disadvantaged"
          />
          <label for="is-disadvantaged">I am of Economic Disadvantage</label>
        </div>
        <div id="certificate-container" class="hidden">
          <label for="certificate-file">Upload Certificate of Indigence:</label>
          <input
            type="file"
            id="certificate-file"
            name="certificate_file"
            accept=".pdf,.jpg,.jpeg,.png"
          />
        </div>

        <div class="checkbox-group">
          <input type="checkbox" id="is-school" name="is_school" />
          <label for="is-school">We are a school/body</label>
        </div>

        <!-- Turnstile Widget -->
        <div style="margin-top: 1.5rem;">
          <label>Verification:</label>
          <div class="cf-turnstile" data-sitekey={turnstileSiteKey}></div>
        </div>
        <!-- End Turnstile Widget -->

        <div id="order-status" aria-live="polite"></div>

        <button
          type="submit"
          id="submit-order-button"
          data-original-text="Submit Order"
        >
          Submit Order
        </button>
      </form>
    </section>
  </main>
</Layout>

<script>
  import { submitOrderForm } from "../scripts/formHandler";
  import type { OrderFormSubmitOptions } from "../scripts/formHandler";

  const form = document.getElementById("order-form") as HTMLFormElement | null;
  const orderFilesInput = document.getElementById(
    "order-files",
  ) as HTMLInputElement | null;
  const nameInput = document.getElementById(
    "orderer-name",
  ) as HTMLInputElement | null;
  const phoneInput = document.getElementById(
    "phone",
  ) as HTMLInputElement | null;
  const packageSlider = document.getElementById(
    "package-slider",
  ) as HTMLInputElement | null;
  const packageDisplay = document.getElementById(
    "selected-package-display",
  ) as HTMLSpanElement | null;
  const disadvantageCheckbox = document.getElementById(
    "is-disadvantaged",
  ) as HTMLInputElement | null;
  const certificateContainer = document.getElementById(
    "certificate-container",
  ) as HTMLDivElement | null;
  const certificateInput = document.getElementById(
    "certificate-file",
  ) as HTMLInputElement | null;
  const schoolCheckbox = document.getElementById(
    "is-school",
  ) as HTMLInputElement | null;
  const submitButton = document.getElementById(
    "submit-order-button",
  ) as HTMLButtonElement | null;
  const statusDiv = document.getElementById(
    "order-status",
  ) as HTMLElement | null;

  const packageMap: { [key: string]: string } = {
    "1": "Basic",
    "2": "Standard",
    "3": "Premium",
  };

  if (
    form &&
    orderFilesInput &&
    nameInput &&
    phoneInput &&
    packageSlider &&
    packageDisplay &&
    disadvantageCheckbox &&
    certificateContainer &&
    certificateInput &&
    schoolCheckbox &&
    submitButton &&
    statusDiv
  ) {

    packageSlider.addEventListener("input", () => {
      const selectedValue = packageSlider.value;
      packageDisplay.textContent = packageMap[selectedValue] || "Unknown";
    });

    disadvantageCheckbox.addEventListener("change", () => {
      if (disadvantageCheckbox.checked) {
        certificateContainer.classList.remove("hidden");
        certificateInput.required = true;
      } else {
        certificateContainer.classList.add("hidden");
        certificateInput.required = false;
        certificateInput.value = "";
      }
    });

    form.addEventListener("submit", async (event) => {
      event.preventDefault(); 

      if (
        !orderFilesInput.files ||
        orderFilesInput.files.length === 0 ||
        Array.from(orderFilesInput.files).every((f) => f.size === 0)
      ) {
        statusDiv.textContent = "Please select at least one document file.";
        statusDiv.style.color = "red";
        if (orderFilesInput) {
          orderFilesInput.focus();
        }
        return;
      }
      if (
        disadvantageCheckbox.checked &&
        (!certificateInput.files ||
          certificateInput.files.length === 0 ||
          certificateInput.files[0].size === 0)
      ) {
        statusDiv.textContent = "Please upload the certificate of indigence.";
        statusDiv.style.color = "red";
        if (certificateInput) {
          certificateInput.focus();
        }
        return;
      }

      if (!nameInput.value.trim()) {
        statusDiv.textContent = "Please enter your name.";
        statusDiv.style.color = "red";
        if (nameInput) {
          nameInput.focus();
        }
        return;
      }
      if (!phoneInput.value.trim()) {
        statusDiv.textContent = "Please enter your phone number.";
        statusDiv.style.color = "red";
        if (phoneInput) {
          phoneInput.focus();
        }
        return;
      }

      const onSuccessHandler = (data: any, formElement: HTMLFormElement) => {
        if (statusDiv) {
          statusDiv.textContent = `Order submitted successfully! Order ID: ${data?.id || "[Unknown ID]"}`;
          statusDiv.style.color = "green";
        }
        formElement.reset();
        if (packageSlider && packageDisplay) {
          packageDisplay.textContent =
            packageMap[packageSlider.value] || "Unknown";
        }
        if (certificateContainer && certificateInput) {
          certificateContainer.classList.add("hidden");
          certificateInput.required = false;
        }
        setTimeout(() => {
          if (statusDiv) statusDiv.textContent = "";
        }, 8000);
      };

      const onErrorHandler = (
        error: Error,
        statusElement: HTMLElement | null,
      ) => {
        if (statusElement) {
          statusElement.textContent = `Error: ${error.message || "An unexpected error occurred."}`;
          statusElement.style.color = "red";
        }
      };

      const options: OrderFormSubmitOptions = {
        formElement: form,
        statusElement: statusDiv,
        submitButton: submitButton,
        onSuccess: onSuccessHandler,
        onError: onErrorHandler,

      };

      await submitOrderForm(options);
    });
  } else {
    console.error(
      "Could not find all required elements for the order form script. Check element IDs.",
      {
        form,
        orderFilesInput,
        nameInput,
        phoneInput,
        packageSlider,
        packageDisplay,
        disadvantageCheckbox,
        certificateContainer,
        certificateInput,
        schoolCheckbox,
        submitButton,
        statusDiv,
      },
    );
    const errorDisplay = document.getElementById("order-status");
    if (errorDisplay) {
      errorDisplay.textContent =
        "Error initializing the order form. Please refresh the page.";
      errorDisplay.style.color = "red";
    } else if (statusDiv) {
      statusDiv.textContent =
        "Error initializing the order form. Please refresh the page.";
      statusDiv.style.color = "red";
    }
  }
</script>